{"version":3,"sources":["store/actions/SignOut.js","component/layout/SignInLinks.js","component/layout/SignOutLinks.js","component/layout/Navbar.js","component/dashboard/Notifications.js","component/projects/ProjectSummary.js","component/projects/ProjectList.js","component/dashboard/Dashboard.js","component/projects/ProjectDetails.js","component/auth/SignIn.js","store/actions/authActions.js","store/actions/SignUp.js","component/auth/SignUp.js","store/actions/ProjectActions.js","component/projects/CreateProject.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/projectReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["signOut","dispatch","getState","getFirebase","auth","then","type","connect","props","className","to","onClick","profile","initials","SignOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","firstName","lastName","SignUp","createProject","userId","add","authorId","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.3b716867.chunk.js","sourcesContent":["export const signOut = ()=>{\n    return(dispatch,getState,{getFirebase})=>{\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(()=>{\n            dispatch({type:'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport default signOut;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport signOut from '../../store/actions/SignOut'\n \nconst SignInLinks = (props) => {\n    return(\n       <ul className=\"right\">\n           <li><NavLink to=\"/create\">New Project</NavLink></li>\n           <li><a onClick={props.signOut}>Log out</a></li>\n           <li><NavLink to=\"/\" className='btn btn-floating pink lighten-1'>{props.profile.initials}</NavLink></li>\n       </ul>\n    )\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signOut:()=>dispatch(signOut())\n    }\n}\nexport default connect(null,mapDispatchToProps)(SignInLinks);","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n \nconst SignOutLinks = () => {\n    return(\n       <ul className=\"right\">\n           <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n           <li><NavLink to=\"/signin\">Log In</NavLink></li>\n       </ul>\n    )\n}\nexport default SignOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignInLinks from './SignInLinks';\nimport SignOutLinks from './SignOutLinks';\nimport {connect } from 'react-redux';\nconst Navbar = (props)=>{\n    const auth=props.auth\n    const {profile}=props\n    const links = auth.uid ? <SignInLinks profile={profile}/>:<SignOutLinks />\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">BlogTrooper</Link>\n                { links}\n            </div>\n        </nav>\n    )\n}\nconst mapStateToProps=(state)=>{\n    return{\n        auth:state.firebase.auth,\n        profile:state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) =>{\n    const {notifications} = props;   //notif is an array\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item=>{\n                                return(\n                                    <li key={item.id}>\n                                        <span className=\"pink-text\">{item.user}</span>\n                                        <span>{' '+item.content}</span>\n                                        <div className=\"grey-text note-date\">\n                                            {moment(item.time.toDate()).fromNow()}\n                                        </div>\n                                    </li>\n                                )\n                        })}\n                        \n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Notifications;","import React from 'react';\nimport moment from 'moment';\nconst ProjectSummary = ({project}) =>{\n    return(\n            <div className=\"card z-depth-0 project-summary\">\n                    <div className=\"card-content grey-text text-darken-3\">\n                        <span className=\"card-title\">{project.title}</span>\n                        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                    </div>\n                </div>\n    )\n}\nexport default ProjectSummary;","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport {Link }  from 'react-router-dom';\n\nconst ProjectList = ({projects}) =>{ \n    return(\n        <div className=\"project-list section\">\n            { projects && projects.map((project)=>{             //asame as if we ahave atleast 1 project\n                return(\n                    <Link to={'/project/'+project.id} key={project.id}>\n                    <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )}\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\n// compose is used to two higher order components\nimport { compose } from 'redux';\nimport {Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component{\n    render(){\n        const {projects,auth,notifications}=this.props\n        if(!auth.uid)\n        {   return <Redirect to=\"/signup\" />\n        }\n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col m6 s12\">\n                    <ProjectList projects={projects}/>\n                    </div> \n                    <div className=\"col s12 m5 offset-m1\">\n                    <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) =>{\n\n    return{\n        projects:state.firestore.ordered.projects,\n        auth:state.firebase.auth,\n        notifications:state.firestore.ordered.notifications\n    }\n}\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects',orderBy:['createdAt','desc'] },\n        { collection:'notifications',limit:3 , orderBy:['time','desc']}       //gonna take array and connect to the collection\n    ])\n)(Dashboard);","import React from 'react';\n//as we dont have data from firestore here so we need to import that\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport {Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props)=>{\n    const project =props.project;\n    const {auth} = props\n    if(!auth.uid)\n    {   return <Redirect to=\"/signup\" />\n    }\n    if(project){\n        return(\n        <div className=\"container section project-summary\">\n        <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>{project.content}\n                 </p>\n            </div>\n            <div className=\"card-action grey lighten-4 grey-text\">\n                <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                <div>{moment(project.createdAt.toDate()).calendar()}</div>\n            </div>\n        </div>\n    </div>\n        )}\n    else{\n    return(\n       <div className=\"container\">\n            <p>Loading...</p>\n       </div>\n    )\n    }\n}\nconst mapStateToProps=(state,ownProps)=>{\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects\n    const project=projects?projects[id]:null\n    return{\n        project:project,\n        auth:state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection:'projects'}\n    ])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport {connect } from 'react-redux';\nimport {signIn} from '../../store/actions/authActions';\nimport {Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state={\n        email:'',\n        password:''\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError } = this.props\n        const {auth} = this.props\n        if(auth.uid)\n        {   return <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    </div>\n                    <div className=\"center red-text\">\n                        { authError ? (<p>{authError}</p>):null}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=(state)=>{\n    return{\n        authError:state.auth.authError ,\n        auth:state.firebase.auth     //to access error here in sign in\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signIn:(creds)=>dispatch(signIn(creds)) \n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignIn);\n","\n// to make asynchronous call we use action creator\n\nexport const signIn = (credentials)=>{\n    return(dispatch,getState,{getFirebase})=>{\n        const firebase = getFirebase();  //getFirebase is to comminicate with project in firebase\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(()=>{\n            dispatch({type:'LOGIN_SUCCESS'})\n        }).catch(err=>{\n            dispatch({type:'LOGIN_ERROR',err})\n        })\n    }\n}\n\n\n","\n\nexport const signUp = (newUser)=>{\n    return(dispatch,getState,{getFirestore,getFirebase})=>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp)=>{                //returns a promise always\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName:newUser.firstName,\n                lastName:newUser.lastName,\n                initials:newUser.firstName[0]+newUser.lastName[0]\n            })\n        }).then(()=>{\n            dispatch({type:'SIGNUP_SUCCESS'})\n        }).catch(err=>{\n            dispatch({type:'SIGNUP_ERROR',err})\n        })\n    \n    }\n}\nexport default signUp","import React, { Component } from 'react';\nimport {Redirect } from 'react-router-dom';\nimport {connect } from 'react-redux';\nimport signUp from '../../store/actions/SignUp'\n\nclass SignUp extends Component {\n    state={\n        email:'',\n        password:'',\n        firstName:'',\n        lastName:''\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const {auth,authError} = this.props\n        if(auth.uid)\n        {   return <Redirect to=\"/\" />\n        }\n        return (\n            <div className=\"container\">\n                <form className=\"white\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"first name\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"last name\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Signup</button>\n                    </div>\n                    <div className=\"red-text center\">\n                        {authError ? <p>{authError}</p>:null}\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=(state)=>{\n    return{\n        auth:state.firebase.auth,\n        authError:state.auth.authError\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signUp:(newUser)=>dispatch(signUp(newUser))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\n","export const createProject=(project)=>{\n    return(dispatch,getState,{ getFirebase, getFirestore })=>{          //using halts mechanism\n        \n        const profile = getState().firebase.profile\n        const userId = getState().firebase.auth.uid\n        const firestore = getFirestore();\n        firestore.collection('projects').add({\n            ...project,                            // spread operator for project.content and project.title\n            authorFirstName:profile.firstName,\n            authorLastName:profile.lastName,\n            authorId:userId,\n            createdAt:new Date()\n        }).then(()=>{                               //to fire only when the data is added\n            dispatch({type:'CREATE_PROJECT',project});\n        }).catch((err)=>{                  //if we get any error or project not added\n            dispatch({type:'CREATE_PROJECT_ERROR',err});\n        })\n        \n    }\n};\n\nexport default createProject;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport createProject from '../../store/actions/ProjectActions';\nimport {Redirect } from 'react-router-dom';\n\nclass CreateProject extends Component {\n    state={\n        title:'',\n        content:''\n    }\n    handleChange=(e)=>{\n        this.setState({\n            [e.target.id]:e.target.value\n        })\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const {auth} = this.props\n        if(!auth.uid)\n        {   return <Redirect to=\"/signup\" />\n        }\n        return (\n            <div className=\"container\">\n                <form className=\"white create\" onSubmit={this.handleSubmit}>\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=(state)=>{\n    return{\n        auth:state.firebase.auth\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        createProject:(project)=>dispatch(createProject(project))\n    }\n\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject);\n","import React, { Component } from 'react';\nimport './index.css';\nimport {Switch} from 'react-router';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport Navbar from './component/layout/Navbar';\nimport Dashboard from './component/dashboard/Dashboard'\nimport ProjectDetails from './component/projects/ProjectDetails';\nimport SignIn from './component/auth/SignIn';\nimport SignUp from './component/auth/SignUp';\nimport CreateProject from './component/projects/CreateProject';\n\nclass App extends Component{\n  render(){\n    return(\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\n    authError:null\n}\nconst authReducer = (state=initState,action) =>{\n    switch(action.type){\n        case 'LOGIN_ERROR':\n            console.log('login failed');\n            return {\n                ...state,\n                authError:'Login failed'\n            }\n            case 'LOGIN_SUCCESS':\n                console.log('login success');\n                return {\n                    ...state,\n                    authError:null\n                }\n            case 'SIGNOUT_SUCCESS':\n                console.log('signout success')\n                return state\n            case 'SIGNUP_SUCCESS':\n                    console.log('signup success')\n                    return {\n                        ...state,\n                        authError:null\n                    }\n            case 'SIGNUP_ERROR':\n                console.log('signup failed')\n                return {\n                    ...state,\n                    authError:action.err.message\n                }\n            default:\n                return state\n    }\n}\n\nexport default authReducer;","const initState={\n    projects:[\n        {id:1,title:'from east to west'},\n        {id:2,title:'from east to west'},\n        {id:3,title:'from east to west'}\n    ]\n}\nconst projectReducer = (state=initState,action) =>{\n    \n   switch(action.type){\n       case 'CREATE_PROJECT':\n           console.log('created project',action.project);\n           return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('created project error',action.err);\n            return state;\n        default:\n            return state;\n            \n   }\n}\n\nexport default projectReducer;","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\n\nimport {combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport {firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth:authReducer,   // coresponding to auth reducers\n    project:projectReducer,\n    firestore:firestoreReducer ,             //applying firebase to the state ppty ,\n    firebase:firebaseReducer                // to keep track of authentication\n});\n\nexport default rootReducer;","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n var fbConfig = {\n    apiKey: \"AIzaSyCFyO9AtLY5f1nfT0IWfmJ3Odk8TiFPLgo\",\n    authDomain: \"blogtrooper-842ae.firebaseapp.com\",\n    databaseURL: \"https://blogtrooper-842ae.firebaseio.com\",\n    projectId: \"blogtrooper-842ae\",\n    storageBucket: \"blogtrooper-842ae.appspot.com\",\n    messagingSenderId: \"141945489533\",\n    appId: \"1:141945489533:web:d7c00778ac14c664d48914\",\n    measurementId: \"G-DJXKTHLKBK\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(fbConfig);\n  firebase.firestore().settings({ timestampsInSnapshots:true })\n\n  export default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore,applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducer/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n// import firebase from 'firebase/app';\n// import { createFirestoreInstance } from 'redux-firestore';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n   applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n   reduxFirestore(fbConfig),\n   reactReduxFirebase(fbConfig,{useFirestoreForProfile:true,userProfile:'users',attachAuthIsReady:true})\n )\n);\n\n//useFirestoreForProfile:true is used to sync the profile from firestore to get initials(enhancer)\n\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <Provider store={store}>\n      \n        <App />     \n      \n    </Provider>,\n    document.getElementById('root')\n  );\n  serviceWorker.unregister();\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}